version: '3.7'
services:

  api:
    build:
      context: api
    container_name: api
    entrypoint: python3 manage.py runserver 0.0.0.0:8000
    env_file:
      - .env.dev
    ports:
      - "8000:8000"
    volumes:
      - ./api/:/home/code
    depends_on:
      - db
      - redis
    
  celery:
    build:
      context: api
    container_name: celery
    entrypoint: celery -A settings:celery_app worker
    env_file:
      - .env.dev
    depends_on:
      - api
      - redis
  
  beater:
    build:
      context: api
    container_name: beater
    entrypoint: celery -A settings:celery_app beat
    env_file:
      - .env.dev
    depends_on:
      - celery
      - redis

  flower:
    build:
      context: api
    container_name: flower
    entrypoint: celery -A settings:celery_app flower
    env_file:
      - .env.dev
    ports:
      - "5555:5555"
    depends_on:
      - celery
      - redis

  db:
    image: postgres:14-alpine
    container_name: db
    ports:
      - "54321:5432"
    environment:
      - POSTGRES_DB=${DATABASE_NAME}
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DATABASE_USER} -d ${DATABASE_NAME}']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  pgadmin:
    image: dpage/pgadmin4:7.2
    container_name: pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@gmail.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "5050:80"
    depends_on:
      - db
  
  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6380:6379"
    command: redis-server
    volumes:
      - redis_data:/data

volumes:
  postgres_data:
  pgadmin_data:
  redis_data: