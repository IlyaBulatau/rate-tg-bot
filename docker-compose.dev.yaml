version: '3.7'
services:

  bot:
    build:
      context: bot
    container_name: bot
    hostname: bot
    entrypoint: python3 -u main.py
    env_file:
      - .env.dev
    ports:
      - "8080:${BOT_PORT}"
    volumes:
      - ./bot/:/home/code

  api:
    build:
      context: api
    container_name: api
    hostname: api
    entrypoint: python3 manage.py runserver 0.0.0.0:8000
    env_file:
      - .env.dev
    ports:
      - "8000:8000"
    volumes:
      - ./api/:/home/code
    depends_on:
      db:
        condition: service_healthy
      broker:
        condition: service_healthy

  parser:
    build:
      context: parser
    container_name: parser
    entrypoint: python3 -u main.py
    env_file:
      - .env.dev
    volumes:
      - ./parser/:/home/code
    depends_on:
      broker:
        condition: service_healthy

  broker:
    image: rabbitmq:management
    container_name: broker
    environment:
      - RABBITMQ_DEFAULT_USER=${BROKER_USER}
      - RABBITMQ_DEFAULT_PASS=${BROKER_PASSWORD}
    volumes:
      - rabbit_data:/var/lib/rabbitmq
    ports:
      - "15673:15672"
      - "5673:5672"
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 10s
      retries: 2

  db:
    image: postgres:14-alpine
    container_name: db
    ports:
      - "54321:5432"
    environment:
      - POSTGRES_DB=${DATABASE_NAME}
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DATABASE_USER} -d ${DATABASE_NAME}']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  pgadmin:
    image: dpage/pgadmin4:7.2
    container_name: pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@gmail.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "5050:80"
    depends_on:
      - db

volumes:
  postgres_data:
  pgadmin_data:
  rabbit_data: